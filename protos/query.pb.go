// Code generated by protoc-gen-go.
// source: query.proto
// DO NOT EDIT!

/*
Package messages_query is a generated protocol buffer package.

It is generated from these files:
	query.proto

It has these top-level messages:
	Query
	QueryPart
	Filter
	DataCapture
	DataStructure
	OutputProp
*/
package messages_query

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryPartType int32

const (
	QueryPartType_Node   QueryPartType = 0
	QueryPartType_Edge   QueryPartType = 1
	QueryPartType_Output QueryPartType = 2
)

var QueryPartType_name = map[int32]string{
	0: "Node",
	1: "Edge",
	2: "Output",
}
var QueryPartType_value = map[string]int32{
	"Node":   0,
	"Edge":   1,
	"Output": 2,
}

func (x QueryPartType) String() string {
	return proto.EnumName(QueryPartType_name, int32(x))
}
func (QueryPartType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Query struct {
	QueryParts []*QueryPart `protobuf:"bytes,1,rep,name=QueryParts" json:"QueryParts,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Query) GetQueryParts() []*QueryPart {
	if m != nil {
		return m.QueryParts
	}
	return nil
}

type QueryPart struct {
	Type       QueryPartType  `protobuf:"varint,1,opt,name=Type,enum=messages.query.QueryPartType" json:"Type,omitempty"`
	EntityType []byte         `protobuf:"bytes,2,opt,name=EntityType,proto3" json:"EntityType,omitempty"`
	Filters    []*Filter      `protobuf:"bytes,3,rep,name=Filters" json:"Filters,omitempty"`
	Captured   *DataCapture   `protobuf:"bytes,4,opt,name=Captured" json:"Captured,omitempty"`
	Output     *DataStructure `protobuf:"bytes,5,opt,name=Output" json:"Output,omitempty"`
}

func (m *QueryPart) Reset()                    { *m = QueryPart{} }
func (m *QueryPart) String() string            { return proto.CompactTextString(m) }
func (*QueryPart) ProtoMessage()               {}
func (*QueryPart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *QueryPart) GetType() QueryPartType {
	if m != nil {
		return m.Type
	}
	return QueryPartType_Node
}

func (m *QueryPart) GetEntityType() []byte {
	if m != nil {
		return m.EntityType
	}
	return nil
}

func (m *QueryPart) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *QueryPart) GetCaptured() *DataCapture {
	if m != nil {
		return m.Captured
	}
	return nil
}

func (m *QueryPart) GetOutput() *DataStructure {
	if m != nil {
		return m.Output
	}
	return nil
}

type Filter struct {
	Field []byte `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Filter) GetField() []byte {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *Filter) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type DataCapture struct {
	VarName []byte   `protobuf:"bytes,1,opt,name=VarName,proto3" json:"VarName,omitempty"`
	Fields  [][]byte `protobuf:"bytes,2,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (m *DataCapture) Reset()                    { *m = DataCapture{} }
func (m *DataCapture) String() string            { return proto.CompactTextString(m) }
func (*DataCapture) ProtoMessage()               {}
func (*DataCapture) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DataCapture) GetVarName() []byte {
	if m != nil {
		return m.VarName
	}
	return nil
}

func (m *DataCapture) GetFields() [][]byte {
	if m != nil {
		return m.Fields
	}
	return nil
}

type DataStructure struct {
	Props []*OutputProp `protobuf:"bytes,1,rep,name=props" json:"props,omitempty"`
}

func (m *DataStructure) Reset()                    { *m = DataStructure{} }
func (m *DataStructure) String() string            { return proto.CompactTextString(m) }
func (*DataStructure) ProtoMessage()               {}
func (*DataStructure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DataStructure) GetProps() []*OutputProp {
	if m != nil {
		return m.Props
	}
	return nil
}

type OutputProp struct {
	Key    []byte         `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Nested *DataStructure `protobuf:"bytes,2,opt,name=Nested" json:"Nested,omitempty"`
}

func (m *OutputProp) Reset()                    { *m = OutputProp{} }
func (m *OutputProp) String() string            { return proto.CompactTextString(m) }
func (*OutputProp) ProtoMessage()               {}
func (*OutputProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OutputProp) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *OutputProp) GetNested() *DataStructure {
	if m != nil {
		return m.Nested
	}
	return nil
}

func init() {
	proto.RegisterType((*Query)(nil), "messages.query.Query")
	proto.RegisterType((*QueryPart)(nil), "messages.query.QueryPart")
	proto.RegisterType((*Filter)(nil), "messages.query.Filter")
	proto.RegisterType((*DataCapture)(nil), "messages.query.DataCapture")
	proto.RegisterType((*DataStructure)(nil), "messages.query.DataStructure")
	proto.RegisterType((*OutputProp)(nil), "messages.query.OutputProp")
	proto.RegisterEnum("messages.query.QueryPartType", QueryPartType_name, QueryPartType_value)
}

func init() { proto.RegisterFile("query.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x4f, 0xab, 0x40,
	0x10, 0xc7, 0x1f, 0x50, 0xda, 0xbe, 0xa1, 0x6d, 0xc8, 0xe4, 0xa5, 0xe1, 0x69, 0x6a, 0x08, 0x27,
	0xe2, 0x01, 0x6b, 0xd5, 0x18, 0x4f, 0xc6, 0x1f, 0xed, 0xc5, 0xa4, 0xd6, 0x55, 0x7b, 0x5f, 0x65,
	0xd2, 0x34, 0xa1, 0x82, 0xcb, 0x72, 0xe0, 0xe6, 0x9f, 0x6e, 0x58, 0xa0, 0xb6, 0x8d, 0xc6, 0xdb,
	0x7c, 0x87, 0xcf, 0x77, 0xf6, 0xbb, 0xb3, 0x80, 0xf5, 0x9e, 0x91, 0xc8, 0x83, 0x44, 0xc4, 0x32,
	0xc6, 0xde, 0x8a, 0xd2, 0x94, 0x2f, 0x28, 0x0d, 0x54, 0xd7, 0xbb, 0x06, 0xf3, 0xa1, 0x28, 0xf0,
	0x02, 0x40, 0x15, 0x33, 0x2e, 0x64, 0xea, 0x68, 0xae, 0xe1, 0x5b, 0xa3, 0xff, 0xc1, 0x36, 0x1d,
	0xac, 0x09, 0xb6, 0x01, 0x7b, 0x1f, 0x3a, 0xfc, 0x5d, 0x4b, 0x3c, 0x86, 0xc6, 0x53, 0x9e, 0x90,
	0xa3, 0xb9, 0x9a, 0xdf, 0x1b, 0x0d, 0x7e, 0x1c, 0x51, 0x40, 0x4c, 0xa1, 0x78, 0x00, 0x30, 0x7e,
	0x93, 0x4b, 0x99, 0x2b, 0xa3, 0xee, 0x6a, 0x7e, 0x87, 0x6d, 0x74, 0x70, 0x08, 0xad, 0xc9, 0x32,
	0x92, 0x24, 0x52, 0xc7, 0x50, 0xc1, 0xfa, 0xbb, 0x53, 0xcb, 0xcf, 0xac, 0xc6, 0xf0, 0x1c, 0xda,
	0x37, 0x3c, 0x91, 0x99, 0xa0, 0xd0, 0x69, 0xb8, 0x9a, 0x6f, 0x8d, 0xf6, 0x77, 0x2d, 0xb7, 0x5c,
	0xf2, 0x8a, 0x61, 0x6b, 0x18, 0xcf, 0xa0, 0x79, 0x9f, 0xc9, 0x24, 0x93, 0x8e, 0xa9, 0x6c, 0x83,
	0xef, 0x6c, 0x8f, 0x52, 0x64, 0xaf, 0xca, 0x58, 0xc1, 0xde, 0x29, 0x34, 0xcb, 0xa3, 0xf1, 0x1f,
	0x98, 0x93, 0x25, 0x45, 0xa1, 0xba, 0x7f, 0x87, 0x95, 0xa2, 0xe8, 0xce, 0x79, 0x94, 0xd5, 0x97,
	0x2b, 0x85, 0x77, 0x09, 0xd6, 0x46, 0x0a, 0x74, 0xa0, 0x35, 0xe7, 0x62, 0xca, 0x57, 0x54, 0x99,
	0x6b, 0x89, 0xfd, 0x62, 0x3c, 0x45, 0x61, 0xea, 0xe8, 0xae, 0xe1, 0x77, 0x58, 0xa5, 0xbc, 0x2b,
	0xe8, 0x6e, 0xe5, 0xc1, 0x21, 0x98, 0x89, 0x88, 0x93, 0xfa, 0x01, 0xf7, 0x76, 0xd3, 0x97, 0x71,
	0x67, 0x22, 0x4e, 0x58, 0x09, 0x7a, 0xcf, 0x00, 0x5f, 0x4d, 0xb4, 0xc1, 0xb8, 0xa3, 0xbc, 0x3a,
	0xbe, 0x28, 0x8b, 0x85, 0x4c, 0x29, 0x95, 0x14, 0xaa, 0xe8, 0xbf, 0x2f, 0xa4, 0x84, 0x0f, 0x8f,
	0xa0, 0xbb, 0xf5, 0xd2, 0xd8, 0x86, 0xc6, 0x34, 0x0e, 0xc9, 0xfe, 0x53, 0x54, 0xe3, 0x70, 0x41,
	0xb6, 0x86, 0x50, 0x2f, 0xdb, 0xd6, 0x5f, 0x9a, 0xea, 0xff, 0x3c, 0xf9, 0x0c, 0x00, 0x00, 0xff,
	0xff, 0x2f, 0x2a, 0x93, 0x7d, 0xae, 0x02, 0x00, 0x00,
}
